{"version":3,"sources":["Card.js","CardList.js","ErrorBoundary.js","scroll.js","SearchBox.js","App.js","index.js"],"names":["Card","robot","className","src","id","alt","name","email","CardList","robots","cardArray","map","user","index","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowX","border","height","SearchBox","SearchChange","type","placeholder","onChange","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filterRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"4MAaeA,EAXF,SAACC,GACV,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,gBAAmDC,IAAI,SAC/D,gCACI,6BAAKJ,EAAMK,OACX,kCAAKL,EAAMM,gBCWZC,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAQ,cAAC,EAAD,CACJT,GAAIK,EAAOI,GAAOT,GAClBE,KAAMG,EAAOI,GAAOP,KACpBC,MAAOE,EAAOI,GAAON,OAHNM,MAMvB,OACI,8BAEMH,KCaCI,E,kDAxBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SAEP,8CAKGG,KAAKL,MAAMO,a,GApBFC,aCSbC,EATA,SAACT,GACZ,OACI,qBAAKU,MAAQ,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAjE,SACKb,EAAMO,YCQJO,EAVG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAK5B,UAAU,MAAf,SACA,uBAAOA,UAAW,mCAClB6B,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCkDHI,E,kDAnDb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GAChB,EAAKf,SAAS,CAAEgB,YAAaD,EAAME,OAAOC,SAP1C,EAAKvB,MAAQ,CACXP,OAAQ,GACR4B,YAAa,IAJH,E,qDAcd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAc,OAAOA,EAASC,UACnCF,MAAK,SAAAG,GACJ,EAAKvB,SAAS,CACZZ,OAAQmC,S,oBAKhB,WAAU,IAAD,OACDC,EAAezB,KAAKJ,MAAMP,OAAOqC,QAAO,SAAArC,GAC5C,OAAOA,EAAOH,KAAKyC,cAAcC,SAAS,EAAKhC,MAAMqB,YAAYU,kBAEnE,OAAiC,IAA7B3B,KAAKJ,MAAMP,OAAOwC,OAElB,8BACE,qDAMF,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAW4B,aAAcV,KAAKe,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQoC,e,GA3CZtB,a,MCClB2B,IAASC,OAEP,8BACC,cAAC,EAAD,MAGDC,SAASC,eAAe,W","file":"static/js/main.0eb2b00d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (robot) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow pw2 shadow5'>\r\n            <img src={`https://robohash.org/${robot.id }test?100x200`} alt='name' />\r\n            <div>\r\n                <h3>{robot.name}</h3>\r\n                <p> {robot.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, index) => {\r\n        return (<Card key={index}\r\n            id={robots[index].id}\r\n            name={robots[index].name}\r\n            email={robots[index].email}\r\n        />);\r\n    })\r\n    return (\r\n        <div>\r\n            {/* if you dont destructure <Card id={robots.robots[0].id} name={robots.robots[0].name} email={robots.robots[0].email} /> */}\r\n            { cardArray}\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <div>\r\n                    Oops! Error\r\n                </div>\r\n            );\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style ={{overflowX:'scroll',border:'6px solid black',height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst SearchBox = ({SearchChange}) => {\r\n  \r\n    return (\r\n        <div className='pa2'>\r\n        <input className ='pa3 ba b--green bg-lightest-blue' \r\n        type=\"search\" placeholder='Search Robots'\r\n        onChange={SearchChange} />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React, { Component } from 'react';\nimport CardList from './CardList';\nimport ErrorBoundary from './ErrorBoundary';\nimport Scroll from './scroll';\nimport SearchBox from './SearchBox';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  }\n\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => { return response.json() })\n      .then(users => {\n        this.setState({\n          robots: users\n        })\n      });\n  }\n\n  render() {\n    const filterRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n    if (this.state.robots.length === 0) {\n      return (\n        <div>\n          <h2>No elements found</h2>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className='tc'>\n          <h1 className='f1'>  ROBO LIST</h1>\n          <SearchBox SearchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n            <CardList robots={filterRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport App from './App';\nimport  './index.css';\n// import registerServicecWorker from './registerServiceWorker';\n\n\nReactDOM.render(\n \n  <div>\n   <App/>    \n   </div>,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}